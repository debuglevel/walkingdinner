{
  "surveyfile": "Adresse,Koch1,Koch2,Mail1,Mail2,Telefon1,Telefon2,Diet,Capabilities
Gaustadter Hauptstraße 12,Theodora Tatum,Natashia Neubert,Theodora_Tatum@foobar.com,Natashia_Neubert@foobar.com,(590) 892-8279,(746) 122-1619,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"St. Anno, Hegelstraße 71, Appartement B87",Junie Jeffers,Ute Ungar,Junie_Jeffers@foobar.com,Ute_Ungar@foobar.com,(814) 572-7536,(185) 380-4974,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Birkengraben 19,Jinny Jo,Marissa Marrs,Jinny_Jo@foobar.com,Marissa_Marrs@foobar.com,(128) 322-5789,(234) 907-8220,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Zollnerstr. 1,Sherley Sailor,Neoma Noda,Sherley_Sailor@foobar.com,Neoma_Noda@foobar.com,(350) 260-8554,(853) 707-1812,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Regensburger Ring 2 (bei Beckmann),Dorris Donadio,Anjelica Aday,Dorris_Donadio@foobar.com,Anjelica_Aday@foobar.com,(626) 347-6033,(663) 758-3710,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Gasfabrikstraße 2,Leena Louder,Kamala Krawczyk,Leena_Louder@foobar.com,Kamala_Krawczyk@foobar.com,(584) 550-3711,(169) 412-5164,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Hauptwachtstraße 5,Yessenia Yelvington,Trisha Tadlock,Yessenia_Yelvington@foobar.com,Trisha_Tadlock@foobar.com,(883) 730-2956,(493) 953-4214,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Nürnberger Str. 16,Tora Toman,Mitsuko Miers,Tora_Toman@foobar.com,Mitsuko_Miers@foobar.com,(921) 573-0043,(965) 979-6657,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"Gaustadter Hauptstraße 21, 96049 Bamberg",Gigi Goins,April Acord,Gigi_Goins@foobar.com,April_Acord@foobar.com,(524) 253-5169,(405) 532-2076,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
"Frauenstraße, 7 96047 Bamberg",Cora Coppola,Madelene Mcguffie,Cora_Coppola@foobar.com,Madelene_Mcguffie@foobar.com,(543) 521-4315,(106) 114-1605,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
"Gaustadter Hauptstraße 11, 96049",Tarah Tedford,Bret Besaw,Tarah_Tedford@foobar.com,Bret_Besaw@foobar.com,(250) 641-1392,(471) 191-7240,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Kaimsgasse 12,Lelah Lilly,Janis Jerabek,Lelah_Lilly@foobar.com,Janis_Jerabek@foobar.com,(965) 244-1416,(612) 273-8344,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen."
Hegelstraße 12 Ap. B63,Kisha Kunzman,Katlyn Kiel,Kisha_Kunzman@foobar.com,Katlyn_Kiel@foobar.com,(551) 940-7448,(794) 278-9940,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
"Austraße 12, 96047 Bamberg",Sharla Stanforth,Alecia Aviles,Sharla_Stanforth@foobar.com,Alecia_Aviles@foobar.com,(829) 963-9582,(681) 238-2898,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Siechenstraße 12,Wyatt Warrington,Cheri Celis,Wyatt_Warrington@foobar.com,Cheri_Celis@foobar.com,(385) 725-9018,(903) 986-1237,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Plattengasse 4,Cherilyn Carvalho,Bobette Birch,Cherilyn_Carvalho@foobar.com,Bobette_Birch@foobar.com,(862) 631-8046,(410) 174-2665,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Marienplatz 1 EG,Erinn Everhart,Maile Mcbroom,Erinn_Everhart@foobar.com,Maile_Mcbroom@foobar.com,(951) 459-5178,(804) 770-1138,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen."
Pödeldorfer Straße 12,Nannie Nakken,Carlos Cavazos,Nannie_Nakken@foobar.com,Carlos_Cavazos@foobar.com,(480) 472-7952,(123) 396-9397,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"Marienplatz 12, 96050 Bamberg ",Gretchen Gibby,Annabelle Aller,Gretchen_Gibby@foobar.com,Annabelle_Aller@foobar.com,(285) 493-7688,(266) 254-0495,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
An der Spinnerei 11-17,Elden Eells,Lia Lester,Elden_Eells@foobar.com,Lia_Lester@foobar.com,(542) 496-0448,(682) 909-6396,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
Sturzstraße 12,Virgilio Viers,Daniella Doud,Virgilio_Viers@foobar.com,Daniella_Doud@foobar.com,(352) 842-3018,(550) 135-0335,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
"Zollnerstraße 30, 96052 Bamberg",Jerica Justis,Adena Appell,Jerica_Justis@foobar.com,Adena_Appell@foobar.com,(985) 130-7970,(995) 904-6393,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
"Hallstadter Str. 80, 96052 Bamberg",Gilda Greaves,Laure Laconte,Gilda_Greaves@foobar.com,Laure_Laconte@foobar.com,(717) 682-4026,(665) 350-2045,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Nürnberger Straße 10,Shantel Sly,Karma Koening,Shantel_Sly@foobar.com,Karma_Koening@foobar.com,(634) 511-8555,(605) 295-8760,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Eckbertstr. 40,Jaime Jack,Colton Capetillo,Jaime_Jack@foobar.com,Colton_Capetillo@foobar.com,(564) 329-6348,(960) 145-0052,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen.;Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Kleberstraße 40,Lakendra Luke,Eusebia Emmons,Lakendra_Luke@foobar.com,Eusebia_Emmons@foobar.com,(402) 179-3823,(466) 576-6184,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen."
Josephstraße 10,Melanie Marse,Demetra Doucette,Melanie_Marse@foobar.com,Demetra_Doucette@foobar.com,(459) 517-9789,(175) 553-6066,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Schlüsselstr. 1 96047 Bamberg,Janet Jaramillo,Yung Yale,Janet_Jaramillo@foobar.com,Yung_Yale@foobar.com,(379) 692-5437,(208) 631-0747,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Margaretendamm 30 96052 Bamberg (Whg. 22),Arnita Arrigo,Janetta Jeanes,Arnita_Arrigo@foobar.com,Janetta_Jeanes@foobar.com,(365) 242-6195,(963) 933-6819,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Paul-Keller-Ring 10 96052 Bamberg,Clarine Cassano,Yvone Yadon,Clarine_Cassano@foobar.com,Yvone_Yadon@foobar.com,(734) 862-0398,(580) 856-5079,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
"Pödeldorfer Straße 2, 96052 Bamberg",Syreeta Schirmer,Hershel Hardesty,Syreeta_Schirmer@foobar.com,Hershel_Hardesty@foobar.com,(771) 115-4052,(217) 864-3649,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen."
Kirschäckerstraße 1,Brenton Bull,Stasia Spann,Brenton_Bull@foobar.com,Stasia_Spann@foobar.com,(210) 856-3054,(969) 352-8563,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"Panzerleite 10, 96049 Bamberg",Paulette Poblete,Brian Batie,Paulette_Poblete@foobar.com,Brian_Batie@foobar.com,(109) 998-8575,(387) 198-6084,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"Holzmarkt 10, 96047 Bamberg",Maud Myatt,Shauna Schwartz,Maud_Myatt@foobar.com,Shauna_Schwartz@foobar.com,(426) 364-1591,(833) 260-8966,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen."
"Obere Mühlbrücke 10, 96047 Bamberg",Simonne Stallworth,Lorrie Laprade,Simonne_Stallworth@foobar.com,Lorrie_Laprade@foobar.com,(317) 567-5998,(738) 820-0039,Omnivore,"Ich schaffe es, eine omnivore Vorspeise zu machen.;Ich schaffe es, ein omnivores Hauptgericht zu machen.;Ich schaffe es, ein omnivores Dessert zu machen."
"Schützenstr. 40, 96047 Bamberg",Ivana Ishmael,Dennis Deemer,Ivana_Ishmael@foobar.com,Dennis_Deemer@foobar.com,(683) 134-8156,(405) 395-3037,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
Gönnerstraße 1 96050 Bamberg,Erika Every,Christian Challis,Erika_Every@foobar.com,Christian_Challis@foobar.com,(863) 794-9212,(515) 805-6028,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen."
Schönbornstraße 1,Coletta Camilleri,Marielle Mandez,Coletta_Camilleri@foobar.com,Marielle_Mandez@foobar.com,(255) 570-0988,(154) 829-3610,Vegan,"Ich schaffe es, eine vegane Vorspeise zu machen.;Ich schaffe es, ein veganes Hauptgericht zu machen.;Ich schaffe es, ein veganes Dessert zu machen."
"Fabrikbau 4, 96049 Bamberg",Shawn Smart,Shanika Sones,Shawn_Smart@foobar.com,Shanika_Sones@foobar.com,(769) 958-3576,(828) 163-0742,Vegetarisch,"Ich schaffe es, eine vegetarische Vorspeise zu machen.;Ich schaffe es, ein vegetarisches Hauptgericht zu machen.;Ich schaffe es, ein vegetarisches Dessert zu machen.;Ich schaffe es, eine vegane Vorspeise zu machen."
",
  "populationsSize": 200,
  "fitnessThreshold": 0.001,
  "steadyFitness": 100,
  "location": "Bamberg"
}
