app:
  walkingdinner:
    planners:
      url: http://localhost:8081
    reporters:
      mail:
        from-mail-address: "user@domain.invalid"
      gmail:
        credentials-folder: "credentials/gmail/"
        client-secret-file: "/google_gmail_client_secret.json"

micronaut:
  application:
    name: walkingdinner
  server:
    port: 8080 # default: -1 (random port)
    cors:
      enabled: true # default: false
  http:
    # manual service discovery
    services:
      plan:
        urls:
          - http://localhost:8083/plans/
      calculation:
        urls:
          - http://localhost:8083/calculations
  router:
    static-resources:
      # YAML file will be available at http://localhost:8080/swagger/walking-dinner-microservice-0.0.1.yml
      # where "walkingdinner-microservice-0.0.1" is derived from the Title and Version attributes of @OpenAPIDefinition
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
  security:
    default: false
    #enabled: true

jackson:
  serialization:
    indentOutput: true
    writeDatesAsTimestamps: false

datasources:
  #  # Apache Derby
  #  default:
  #    url: jdbc:derby:memory:devDb;create=true
  #    driverClassName: org.apache.derby.jdbc.EmbeddedDriver
  #    username: sa
  #    password: ''
  #    schema-generate: CREATE_DROP
  #    dialect: Derby
  #  # HSQL
  #  default:
  #    url: jdbc:hsqldb:mem:devDb
  #    driverClassName: org.hsqldb.jdbc.JDBCDriver
  #    username: sa
  #    password: ''
  #    schema-generate: CREATE_DROP
  #    dialect: HSQL
  # H2
  default:
    url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    schema-generate: CREATE_DROP
    dialect: H2

jpa:
  default:
    properties:
      hibernate:
        bytecode:
          provider: none
        hbm2ddl:
          auto: update



