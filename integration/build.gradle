buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'

//    // create start scripts
//    // is executed on "build" task but not on e.g. "jar" task
//    id 'application'

    // bundle all dependencies into one fat shadowed jar
    // (gets automatically triggered when application plugin is present)
    id 'com.github.johnrengelman.shadow' version '2.0.4'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

group 'de.debuglevel.walkingdinner'
version '0.0.1-SNAPSHOT'

//// application plugin configuration
//applicationName = "Walking-Dinner Genetic-Planner"
//mainClassName = "de.debuglevel.walkingdinner.planner.geneticplanner.MainKt"

sourceCompatibility = 1.8

repositories {
    jcenter()
    maven {
        url "https://dl.bintray.com/debuglevel/maven"
    }
    maven {
        url "https://jitpack.io"
    }
}

// start task "shadowJar" on "build" (the other subprojects do not need this, as "shadowJar" is triggered when "application" is present)
tasks.build.dependsOn tasks.shadowJar

dependencies {
    // Kotlin
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.50"

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testImplementation 'org.assertj:assertj-core:3.10.0'

    // Logging
    // see http://saltnlight5.blogspot.com/2013/08/how-to-configure-slf4j-with-different.html for a quick introduction to slf4j
    implementation 'io.github.microutils:kotlin-logging:1.7.6'
    implementation 'org.slf4j:slf4j-api:1.7.5'
    implementation 'org.slf4j:slf4j-simple:1.7.5'

    // Configuration
    implementation 'com.natpryce:konfig:1.6.9.0'

    // CSV Import
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.0'

    // Templating
    implementation "org.jtwig:jtwig-core:5.87.0.RELEASE"

    // Google Gmail
    implementation 'com.google.apis:google-api-services-gmail:v1-rev89-1.23.0'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev83-1.23.0'
    implementation 'javax.mail:javax.mail-api:1.6.1'
    implementation 'com.sun.mail:javax.mail:1.6.1'

    // Jsondb
    implementation 'io.jsondb:jsondb-core:1.0.36'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.5'
    
    // MongoDB
    implementation 'org.litote.kmongo:kmongo:3.11.0'

    // Google Maps Services
    implementation 'com.google.maps:google-maps-services:0.9.0'
    //implementation 'org.slf4j:slf4j-nop:1.7.25'

    // OpenStreetMaps Geocoding
    implementation 'fr.dudie:nominatim-api:3.3'

    // project dependencies
    implementation project(':planners')
    implementation project(':models')
}

//// jar configuration is still needed (despite of application plugin) to add Manifest to traditional jar
//jar {
//    manifest {
//        attributes 'Implementation-Title': applicationName,
//                'Implementation-Version': version,
//                'Main-Class': mainClassName
//    }
//}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    reports {
        html.enabled = true
    }
}