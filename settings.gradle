pluginManagement {
    plugins {
        id 'com.gradle.enterprise' version "$gradleEnterpriseVersion"
        id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
        id 'org.jetbrains.kotlin.kapt' version "$kotlinVersion"
        id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
        id "com.github.ben-manes.versions" version "$versionsPluginVersion"
        id 'net.researchgate.release' version "$releasePluginVersion"
        id 'com.github.johnrengelman.shadow' version "$shadowVersion"
        id "org.jetbrains.kotlin.plugin.jpa" version "$kotlinVersion"
    }
}

plugins {
    // Like --scan option to gradle
    id "com.gradle.enterprise"
}

println("settings.gradle: Processing...")

// Configuration of com.gradle.enterprise (build scan) plugin
gradleEnterprise {
    buildScan {
        // Accept the license agreement for com.gradle.build-scan plugin
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'

        // Always publish scan (no more need for --scan option)
        publishAlways()
    }
}

rootProject.name = 'walkingdinner'

//include 'integration'
//include 'cli'
println("settings.gradle: Including 'rest' subproject...")
include 'rest'
println("settings.gradle: Including 'planners' subproject...")
include 'planners'
//include 'models'

// only include 'web-angular' project in Linux, as the node plugin fails in Windows
import org.gradle.internal.os.OperatingSystem

println("settings.gradle: Checking if operating system is Linux...")
println("settings.gradle: OperatingSystem.current() = " + OperatingSystem.current())
if (OperatingSystem.current().isLinux()) {
    println("settings.gradle: Including 'web-angular' subproject on Linux...")
    include 'web-angular'
}else{
    println("settings.gradle: Skipping 'web-angular' subproject on Windows...")
}
